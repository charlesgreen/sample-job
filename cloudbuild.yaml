steps:
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA', '.']
  timeout: 500s

# Set up git with key and domain
- name: 'gcr.io/cloud-builders/git'
  secretEnv: ['SSH_KEY']
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    echo "$$SSH_KEY" >> /root/.ssh/id_rsa
    chmod 400 /root/.ssh/id_rsa
    cat <<EOF >/root/.ssh/config
    Hostname github.com
    IdentityFile /root/.ssh/id_rsa
    EOF
    ssh-keyscan -t rsa github.com > /root/.ssh/known_hosts
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Connect to the repository
- name: 'gcr.io/cloud-builders/git'
  args:
  - clone
  - --recurse-submodules
  - git@github.com:simplycubed/$_ENV_REPO.git 
  volumes:
  - name: 'ssh'
    path: /root/.ssh

- id: generate_manifest
  name: 'gcr.io/$PROJECT_ID/yq:v1'
  env:
  - "PROJECT_IMAGE=gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA"
  args:
  - '-c'
  - |
    yq e '.spec.template.spec.containers[0].image=env(PROJECT_IMAGE)' -i $_ENV_REPO/$REPO_NAME/deployment.yaml

# Connect to the repository
- name: 'gcr.io/cloud-builders/git'
  entrypoint: /bin/bash
  dir: $_ENV_REPO
  args:
  - '-c'
  - |
    git config --global user.email "cloudbuild@google.com"
    git config --global user.name "Cloudbuild"
    git add .
    git commit -m "Update manifest"
    git push
  volumes:
  - name: 'ssh'
    path: /root/.ssh

substitutions:
  _ENV_REPO: sample-service-env

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_NUMBER/secrets/env-repo-ssh-key/versions/latest
    env: 'SSH_KEY'

images: ['gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA']
