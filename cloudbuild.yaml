steps:
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_IMAGE:$SHORT_SHA', '.']
  timeout: 500s

- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args: ['echo -n $$TEMP_SECRET']
  secretEnv: ['TEMP_SECRET']

- name: gcr.io/cloud-builders/gcloud
  entrypoint: 'bash'
  args: [ '-c', 'gcloud  beta secrets versions access latest --secret=env-repo-ssh-key > /root/.ssh/id_github' ]
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Set up git with key and domain
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    chmod 600 /root/.ssh/id_github
    cat <<EOF >/root/.ssh/config
    Hostname github.com
    IdentityFile /root/.ssh/id_github
    EOF
    ssh-keyscan -t rsa github.com > /root/.ssh/known_hosts
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Connect to the repository
- name: 'gcr.io/cloud-builders/git'
  args:
  - clone
  - --recurse-submodules
  - git@github.com:simplycubed/$_ENV_REPO.git 
  volumes:
  - name: 'ssh'
    path: /root/.ssh
- id: generate_manifest
  name: 'gcr.io/$PROJECT_ID/yq:v1'
  env:
  - "PROJECT_IMAGE=gcr.io/$PROJECT_ID/$_IMAGE:$SHORT_SHA"
  args:
  - '-c'
  - |
     yq e '.spec.template.spec.containers[0].image=env(PROJECT_IMAGE)' -i $_ENV_REPO/$REPO_NAME/deployment.yaml

# Connect to the repository
- name: 'gcr.io/cloud-builders/git'
  entrypoint: /bin/bash
  dir: $_ENV_REPO
  args:
   - '-c'
   - |
       git config --global user.email "cloudbuild@google.com"
       git config --global user.name "Cloudbuild"
       git add .
       git commit -m "Update manifest"
       git push
  volumes:
  - name: 'ssh'
    path: /root/.ssh

substitutions:
  _IMAGE: sample-service
  _ENV_REPO: sample-service-env

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_NUMBER/secrets/env-repo-ssh-key/versions/latest
    env: 'GITHUB_TOKEN'
  - versionName: projects/$PROJECT_NUMBER/secrets/temp-secret/versions/latest
    env: 'TEMP_SECRET'

images: ['gcr.io/$PROJECT_ID/$_IMAGE:$SHORT_SHA']